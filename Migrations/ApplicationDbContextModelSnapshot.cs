// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiGenitique.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ApiGenitique.Models.ApiGenitique.Models.Quiz", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<float>("Score")
                        .HasColumnType("real");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Quizzes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CourseId = 1,
                            Score = 0.75f,
                            Title = "Quiz 1"
                        },
                        new
                        {
                            Id = 2,
                            CourseId = 1,
                            Score = 0.9f,
                            Title = "Quiz 2"
                        },
                        new
                        {
                            Id = 3,
                            CourseId = 2,
                            Score = 0.6f,
                            Title = "Quiz 3"
                        },
                        new
                        {
                            Id = 4,
                            CourseId = 3,
                            Score = 0.85f,
                            Title = "Quiz 4"
                        },
                        new
                        {
                            Id = 5,
                            CourseId = 4,
                            Score = 0.7f,
                            Title = "Quiz 5"
                        });
                });

            modelBuilder.Entity("ApiGenitique.Models.ApiGenitique.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("ApiGenitique.Models.ApiGenitiqueA.Models.StudentProgress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<int>("QuizId")
                        .HasColumnType("int");

                    b.Property<float>("Score")
                        .HasColumnType("real");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("QuizId");

                    b.HasIndex("StudentId");

                    b.ToTable("StudentProgresses");
                });

            modelBuilder.Entity("ApiGenitique.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "A",
                            Name = "Awareness"
                        },
                        new
                        {
                            Id = 2,
                            Code = "E",
                            Name = "Exposure"
                        },
                        new
                        {
                            Id = 3,
                            Code = "AP",
                            Name = "Appropriation"
                        },
                        new
                        {
                            Id = 4,
                            Code = "AS",
                            Name = "Assimilation"
                        },
                        new
                        {
                            Id = 5,
                            Code = "D",
                            Name = "Development"
                        });
                });

            modelBuilder.Entity("ApiGenitique.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<float>("CompletionRate")
                        .HasColumnType("real");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CompletionRate = 0.9f,
                            Title = "Course A1"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            CompletionRate = 0.85f,
                            Title = "Course E1"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            CompletionRate = 0.75f,
                            Title = "Course AP1"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 4,
                            CompletionRate = 0.95f,
                            Title = "Course AS1"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 5,
                            CompletionRate = 0.8f,
                            Title = "Course D1"
                        });
                });

            modelBuilder.Entity("ApiGenitique.Models.ApiGenitique.Models.Quiz", b =>
                {
                    b.HasOne("ApiGenitique.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("ApiGenitique.Models.ApiGenitiqueA.Models.StudentProgress", b =>
                {
                    b.HasOne("ApiGenitique.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ApiGenitique.Models.ApiGenitique.Models.Quiz", "Quiz")
                        .WithMany()
                        .HasForeignKey("QuizId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ApiGenitique.Models.ApiGenitique.Models.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Quiz");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ApiGenitique.Models.Course", b =>
                {
                    b.HasOne("ApiGenitique.Models.Category", "Category")
                        .WithMany("Courses")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ApiGenitique.Models.Category", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
